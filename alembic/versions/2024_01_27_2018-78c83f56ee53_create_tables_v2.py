"""Create tables v2

Revision ID: 78c83f56ee53
Revises: 4a84b1e4b036
Create Date: 2024-01-27 20:18:08.696204

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "78c83f56ee53"
down_revision: Union[str, None] = "4a84b1e4b036"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "profile",
        sa.Column("first_name", sa.String(length=50), nullable=True),
        sa.Column("last_name", sa.String(length=50), nullable=True),
        sa.Column("bio", sa.String(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_index(op.f("ix_profile_id"), "profile", ["id"], unique=False)
    op.drop_index("ix_profiles_id", table_name="profiles")
    op.drop_table("profiles")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "profiles",
        sa.Column(
            "first_name", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_name", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
        sa.Column("bio", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name="profiles_user_id_fkey", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", name="profiles_pkey"),
        sa.UniqueConstraint("user_id", name="profiles_user_id_key"),
    )
    op.create_index("ix_profiles_id", "profiles", ["id"], unique=False)
    op.drop_index(op.f("ix_profile_id"), table_name="profile")
    op.drop_table("profile")
    # ### end Alembic commands ###
